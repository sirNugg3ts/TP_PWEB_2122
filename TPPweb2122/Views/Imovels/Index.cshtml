@*model IEnumerable<TPPweb2122.Models.Imovel>*@
@model TPPweb2122.ViewModels.ImoveisViewModel


@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "Index";
    var dados = (IPagedList)Model.Imoveis;
}
<link href="/css/PagedList.css" rel="stylesheet" type="text/css" />

<h1>Index</h1>

<p>
    @if (User.IsInRole("Gestor"))
    {
        <a class="btn btn-primary" asp-controller="Imovels" asp-action="Create">Criar novo Imovel</a>
        <a class="btn btn-primary" asp-controller="Reservas" asp-action="Create">Ver Reservas</a>
    }else if(User.IsInRole("Cliente")){
        <a class="btn btn-primary" asp-controller="Reservas" asp-action="Create">Reservar</a>
    }
</p>
<div class="table-responsive">
    <table class="table table-bordered">
    <thead>
        
        <tr>
            <th>
               Nome
            </th>
            <th>
                Localização
            </th>
            <th>
                Descrição
            </th>
            <th>
               Preço
            <th>
                Data de Entrada
            </th>
            <th>
                Data de Saída
            </th>
            <th>
              Categoria
            </th>
            <th>
                Gestor
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Imoveis) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NomeAlojamento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Localizacao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.dataInicio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.dataFinal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categoria.NomeCategoria)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.gestorId)
            </td>

            <td>
                    @if (User.IsInRole("Admin") || User.IsInRole("Gestor") || User.IsInRole("Funcionario"))
                   {
                        <a asp-action="Edit" asp-route-id="@item.ImovelId">Editar</a> 
                        <a asp-action="Details" asp-route-id="@item.ImovelId">Detalhes</a> 
                        <a asp-action="Delete" asp-route-id="@item.ImovelId">Apagar</a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>

</div>

    <div>
        @(Html.Pager(dados)
        .Url(page => Url.Action("Index", new { page = page }))
        .DisplayLinkToFirstPage(PagedListDisplayMode.IfNeeded)
        .DisplayLinkToLastPage(PagedListDisplayMode.IfNeeded)
        .Build())
    </div>
